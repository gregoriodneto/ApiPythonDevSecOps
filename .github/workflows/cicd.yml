name: CI/CD Pipeline - Python App

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: 📦 Checkout do código
        uses: actions/checkout@v4

      - name: 🐍 Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: 📥 Instalar dependências
        run: |
          python -m pip install --upgrade pip
          pip install --no-cache-dir -r requirements.txt

  security-scan:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: 📦 Checkout do código
        uses: actions/checkout@v4

      - name: 🐍 Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: 📥 Instalar dependências
        run: |
          python -m pip install --upgrade pip
          pip install --no-cache-dir -r requirements.txt

      - name: 🚀 Start app em background
        run: |
          pip install --no-cache-dir -r requirements.txt
          nohup gunicorn main:app --bind 0.0.0.0:8000 &

      - name: ⏱️ Esperar app iniciar
        run: |
          sleep 10
          curl http://localhost:8000 || echo "App ainda indisponível"

      - name: 🛡️ Escanear com OWASP ZAP
        uses: zaproxy/action-baseline@v0.11.0
        with:
          target: 'http://localhost:8000'
          docker_name: zaproxy/zap-stable
          cmd_options: '-T 5 -r zap-report.html'

      - name: 📄 Listar arquivos antes do upload
        run: ls -l zap-report.html

      - name: 📤 Salvar relatório ZAP
        uses: actions/upload-artifact@v4
        with:
          name: zap-report
          path: zap-report.html

  docker-deploy:
    runs-on: ubuntu-latest
    needs: security-scan

    steps:
      - name: 📦 Checkout do código
        uses: actions/checkout@v4

      - name: 🔐 Login no Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: 🐳 Build e push da imagem Docker
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/python-app:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/python-app:latest

      - name: 🔐 Adicionar chave SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: 🚀 Deploy no servidor remoto
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
            docker pull ${{ secrets.DOCKER_USERNAME }}/python-app:latest
            docker stop python-app || true
            docker rm python-app || true
            docker run -d --name python-app -p 80:8000 ${{ secrets.DOCKER_USERNAME }}/python-app:latest
          EOF